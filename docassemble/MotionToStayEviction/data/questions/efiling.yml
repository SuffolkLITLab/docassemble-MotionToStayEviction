---
include:
  - docassemble.EFSPIntegration:efiling_integration.yml
  - docassemble.EFSPIntegration:toga_payments.yml
---
code: |
  trial_court_resp = proxy_conn.get_courts(with_names=True)
  trial_court_options = sorted([(court['code'], court['name']) for court in trial_court_resp.data or []], key=lambda c: c[1])
  trial_court_map = {court['code']: court['name'] for court in trial_court_resp.data or []}
---
generic object: ALDocumentBundle
code: |
  x.optional_services.there_are_any = False
---
generic object: DAObject
code: |
  x.filing_description = ''
  x.reference_number = None
  x.filing_parties = ['users[0]']
  x.filing_action = 'efile'
---
if: can_check_efile
only sets:
  - max_total_exhibit_size
  - max_mb_per_file
code: |
  allowed_sizes = get_max_allowed_sizes(proxy_conn, court_id)
  if allowed_sizes:
    max_mb_per_file = allowed_sizes[0] / 1024 / 1024
    max_total_exhibit_size = allowed_sizes[1]
  else:
    max_mb_per_file = 15
    max_total_exhibit_size = 50 * 1024 * 1024
---
generic object: DAObject
id: document type
question: |
  Document type - ${ x.title }
subquestion: |
  If a judge has ordered that this case is sealed, select
  "Impounded". You should also attach a copy of the judge's order.
fields:
  - Document type: x.document_type
    input type: radio
    code: |
      x.document_type_options
    default: ${ matching_tuple_option('public', x.document_type_options) }
---
id: not-in-case-kickout
event: not_in_case_kickout
question: |
  You might have the wrong case
subquestion: |
  % if len(target_case.maybe_user_partips) > 0:
  You said that you weren't ${ comma_and_list(target_case.maybe_user_partips, and_string='or') }. 
  % else:
  There aren't any participants in this case that you can be.
  % endif
  You need to already be a part of the case to file an appeal.

  Press the **Back** button to go back and select a different case or chose the opposing side.
---
need:
  - users
  - is_plaintiff_party
  - is_defendant_party
  - target_case.found_case
  - target_case.self_in_case
only sets: to_add_participants
code: |
  users.clear()
  if target_case.self_in_case not in ['is_self', 'is_filing']:
    not_in_case_kickout
  else:
    target_case.self_partip_choice.is_new = False
    target_case.self_partip_choice.is_form_filler = target_case.self_in_case == 'is_self'
    # Change where DA thinks this obj came from, so it says "you", and not "NAME"
    users.append(target_case.self_partip_choice.copy_deep('users[0]'))
    if hasattr(users[-1].address, 'address'):
      users[-1].address.geocode()
    if is_plaintiff_party(users[0]):
      user_ask_role = 'plaintiff'
    elif is_defendant_party(users[0]):
      user_ask_role = 'defendant'
    to_add_participants = [p for p in target_case.found_case.participants if p.instanceName != target_case.self_partip_choice.instanceName and not is_unused_party(p)]
---
code: |
  motion_to_stay_bundle.filing_type_filters = ['Motion to stay a judgment MRAP 6(a)', 'MRAP 6(a)']
  motion_to_stay_bundle.filing_type_default = '6553'
---
code: |
  affidavit_of_indigency_bundle.filing_type_filters = ['Indigency Affidavit']
  affidavit_of_indigency_bundle.filing_type_default = '8411'
---
code: |
  affidavit_of_indigency_bundle.document_type = "6587" # impounded, all are by default
---
code: |
  efile_case_category_filters = ['Appeals Court Single Justice - Civil', 'Civil']
  efile_case_category_default = '8151'
  efile_case_type_filters = ['Motion for stay of judgment MRAP 6(a)', 'MRAP 6(a)']
  efile_case_type_default = '8157'
---
code: |
  if not is_initial_filing and 'P' in appeals_case_search.docket_number_from_user:
    court_id = 'appeals:acp'
  else:
    court_id = 'appeals:acsj'
---
code: |
  users[i].party_type_filters = ['Defendant/Appellant', 'Defendant/Petitioner']
  users[i].party_type_default = '1729'
---
code: |
  other_parties[i].party_type_filters = ['Plaintiff/Appellee', 'Plaintiff/Respondent']
  other_parties[i].party_type_default = '1736'
---
generic object: DAObject
id: user chosen filing_type
question: |
  What is the filing type of this filing?
subquestion: |
  We found a few filing codes that could be used to file your fee waiver. Choose the one that you think best fits your case.
fields:
  - Filing type: x.user_chosen_filing_type
    datatype: dropdown
    code: |
      x.filtered_filing_options
---
# TODO(brycew): eventually add back attorney ids
generic object: ALIndividual
code: |
  if hasattr(x, 'existing_attorney_ids'):
    x.attorney_ids = x.existing_attorney_ids
  else:
    x.attorney_ids = []
---
generic object: EFCaseSearch
template: x.docket_lookup_choice
content: |
  Docket number
---
template: housing_case_search.case_number_format_template
subject: What does my housing docket number look like?
content: |
  The docket number is a number that the court assigns your case.

  The housing court docket number will usually similar to this:

  15H84CV000436

  It has 5 parts:
  
  * the first 2 numbers, "15" are the case's filing year
  * the third letter is always an "H" in the housing courts
  * the next two numbers, "84", are the housing court "code" and refer to a speific court
  * the next two letters, "CV", are the case-type code
  * the last 6 numbers, "000436", are the case's sequence number
---
reconsider:
  - tyler_payment_account_options
id: payment account
question: |
  Payment Account
subquestion: |
  Select an existing account below, or add a payment account
  using the 
  [eFileMA site](https://massachusetts.tylerhost.net/ofsweb/){:target="_blank"}
  
  Refresh this page when you have finished adding the account.
fields:
  - Payment Account: tyler_payment_id
    datatype: dropdown
    code: |
      tyler_payment_account_options
---
code: |
  allowable_card_types = full_court_info.get('allowablecardtypes', [])
  res = proxy_conn.get_payment_account_list().data
  if res:
    tyler_payment_account_options = filter_payment_accounts(res, allowable_card_types)
  else:
    tyler_payment_account_options = []
  if not tyler_payment_account_options:
    payment_kickout
    #new_payment_account
---
id: payment kickout
event: payment_kickout
question: |
  You need to add a payment account
subquestion: |
  Add a payment account using the
  % if get_config('efile proxy').get('url') == 'https://efile.suffolklitlab.org':
  [eFileMA site](https://massachusetts.tylerhost.net/ofsweb/){:target="_blank"}.
  % else:
  [eFileMA site](https://massachusetts-stage.tylerhost.net/ofsweb/){:target="_blank"}.
  % endif

  Refresh this page when you have added a new payment account.
---
id: submitted form
question: |
  % if efile_resp.response_code == 200:
  Your forms were submitted!
  % else:
  Something went wrong delivering your form
  % endif
subquestion: |
  % if efile_resp.response_code == 200:
  You should receive a confirmation email within 10-15 minutes, and
  you should receive an update from the clerk of the ${ trial_court } on your filing 
  within 48 hours.

  % if no_notice_of_appeal_filed:
  If you haven't yet, you must click **Back to download screen** to download the
  Notice of Appeal form, which needs to be delivered to the **${ housing_court }**. 
  The Notice of Appeal form has not been e-filed. You need to deliver it on your own.
  % else:
  We recommend you continue down below to download the form for your own records.
  Click **Back to download screen** to get a copy of your forms and instructions.
  % endif

  % endif
  
  Here are the forms that you submitted:
  
  ${ al_court_bundle.as_pdf() }

  ${ collapse_template(debug_details) }

continue button field: show_resp
continue button label: Back to download screen
---
############
## Housing case search
############
---
id: case lookup
question: |
  Find your Housing court case
fields:
  - How do you want to find your case?: housing_case_search.do_what_choice
    datatype: radio
    code: |
      housing_case_search.get_lookup_choices(False)
---
if: housing_case_search.can_file_non_indexed_case
id: no cases found from housing search
question: |
  No cases found
subquestion: |
  % if housing_case_search.cms_connection_issue:
  The court's case management system isn't online, and the case you are searching for might exist.
  % endif

  % if housing_case_search.search_went_wrong():
  Something went wrong with the e-filing system when searching for cases.
  % endif

  You can either continue to manually enter the information about your case, or hit "${ word('back') }" to 
  try a new search.
continue button field: housing_case_search.warn_no_results
---
id: ask non-indexed docket number
generic object: EFCaseSearch
question: |
  What is the **Housing Court** docket number for your case?
subquestion: |
  ${ collapse_template(housing_case_search.case_number_format_template) }

fields:
  - Case number: housing_case_search.non_indexed_docket_number
---
comment: |
  For the housing case, we want to get the docket number first if they have it,
  don't need to ask for the court
code: |
  housing_case_search.do_what_choice
  housing_case_search.found_case
  if housing_case_search.found_case and housing_case_search.do_what_choice == 'docket_lookup':
    housing_case_search.display_case
  if housing_case_search.found_case is None and housing_case_search.can_file_non_indexed_case:
    housing_case_search.non_indexed_docket_number
  housing_case_search.case_was_found = housing_case_search.found_case is not None
---
code: |
  if housing_case_search.do_what_choice == 'docket_lookup' and housing_case_search.found_case is None and housing_case_search.can_file_non_indexed_case:
    housing_case_search.non_indexed_docket_number = housing_case_search.docket_number_from_user
---
if: not can_check_efile
code: |
  users[0].is_form_filler = False
---
if: is_initial_filing
code: |
  user_wants_efile = user_wants_affidavit
---
if: is_initial_filing
code: |
  is_defendant_filters = [
    CodeType('1331'),
    'defendant',
  ]

  is_plaintiff_filters = [
    CodeType('1332'),
    'plaintiff',
  ]
---
##################################
## Appeals case search
##################################
---
code: |
  appeals_case_search.case_number_format_template = explain_appeals_docket_format_template
---
id: case lookup
question: |
  Find your Appeals court case
fields:
  - How do you want to find your case?: appeals_case_search.do_what_choice
    datatype: radio
    code: |
      appeals_case_search.get_lookup_choices(False)
---
## Some of the existing cases have party types like "Defdendant/Pititioner".
## We need to stop matching "respondent", etc. to get it right.
if: not is_initial_filing
code: |
  # TODO(brycew): harder, because it's affected by user_started_case
  is_defendant_filters = [
    CodeType('1729'),
    CodeType('598'),
    'defendant',
    'appellant'
  ]
---
if: not is_initial_filing
code: |
  is_plaintiff_filters = [
    CodeType('1736'),
    'plaintiff',
    'appellee',
  ]
---